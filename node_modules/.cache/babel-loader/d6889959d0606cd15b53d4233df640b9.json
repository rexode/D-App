{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\frontend_base_dapp\\\\src\\\\layout\\\\Mint\\\\Mint.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./Mint.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StyledButton = styled.button`\n  padding: 8px;\n`;\n\nfunction Mint() {\n  _s();\n\n  const [cost, setcost] = useState(\"----\");\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claiminnft, setClaiminnft] = useState(false);\n  const [feedback, setFeedback] = useState(\"eyyyy\");\n  const [balance, setbalance] = useState(\"----\");\n\n  const getBalance = () => {\n    //var accounts =blockchain.web3.eth.getAccounts();\n    //var balance = blockchain.web3.eth.getBalance(accounts[0])\n    //var account = blockchain.web3.eth.accounts[0];\n    blockchain.web3.eth.getBalance(blockchain.account, function (err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        setbalance(blockchain.web3.utils.fromWei(result, \"ether\"));\n        setcost(blockchain.web3.utils.toWei(0.05.toString(), \"ether\"));\n      }\n    });\n  };\n\n  const claimNft = () => {\n    blockchain.web3.eth.getBalance(blockchain.account, function (err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        if (blockchain.web3.utils.fromWei(result, \"ether\") > 0.05) {\n          setbalance(blockchain.web3.utils.fromWei(result, \"ether\"));\n          setcost(0.05);\n          setClaiminnft(true);\n          blockchain.smartContract.methods.mint().send({\n            from: blockchain.account,\n            value: blockchain.web3.utils.toWei(0.05.toString(), \"ether\")\n          }).once(\"error\", err => {\n            setClaiminnft(false);\n            feedback(\"error\");\n            console.log(err);\n          }).then(receipt => {\n            setFeedback(\"success\");\n            setClaiminnft(false);\n          });\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Intro\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"MintText\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"MintTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"MINT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"MintDescription\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"COOL DIGITAL ART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"MintTextDescription\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          children: [\"A brand new community of Crypto art that aims\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 72\n          }, this), \" to do great and innovative projects by creating a community\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 137\n          }, this), \" to bring the users closer to quality and unique art.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), \" Join the community for a chance of getting an nft for free.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"MintButton\",\n        children: blockchain.account === \"\" || blockchain.smartContract === null ? /*#__PURE__*/_jsxDEV(s.Container, {\n          flex: 1,\n          ai: \"center\",\n          jc: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: e => {},\n            children: \"Connect to Eth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(s.Container, {\n          flex: 1,\n          ai: \"center\",\n          jc: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: e => {\n              e.preventDefault();\n              claimNft();\n            },\n            children: \"Soon!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mint, \"mNa6z1TnYzvxCFBSgP9OGapUOfo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/src/layout/Mint/Mint.jsx"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","connect","fetchData","s","styled","StyledButton","button","Mint","cost","setcost","dispatch","blockchain","state","data","claiminnft","setClaiminnft","feedback","setFeedback","balance","setbalance","getBalance","web3","eth","account","err","result","console","log","utils","fromWei","toWei","toString","claimNft","smartContract","methods","mint","send","from","value","once","then","receipt","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Mint.css\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../../redux/data/dataActions\";\r\nimport * as s from \"../../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`;\r\nfunction Mint(){\r\n    const [cost,setcost]=useState(\"----\");\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [claiminnft,setClaiminnft]=useState(false);\r\n    const [feedback,setFeedback]=useState(\"eyyyy\");\r\n    const [balance,setbalance]=useState(\"----\");\r\n\r\n    const getBalance =() =>{\r\n        //var accounts =blockchain.web3.eth.getAccounts();\r\n        //var balance = blockchain.web3.eth.getBalance(accounts[0])\r\n        //var account = blockchain.web3.eth.accounts[0];\r\n        blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n          if (err) {\r\n            console.log(err)\r\n          } else {\r\n            setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n            setcost(blockchain.web3.utils.toWei((0.05).toString(),\"ether\"))\r\n          }\r\n        })\r\n      }\r\n      const claimNft =() =>{\r\n        blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n          if (err) {\r\n            console.log(err)\r\n          } else {\r\n            if(blockchain.web3.utils.fromWei(result, \"ether\")>0.05 ){\r\n            setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n            setcost(0.05)\r\n        setClaiminnft(true);\r\n        blockchain.smartContract.methods.mint().send({\r\n          from:blockchain.account,\r\n          value:blockchain.web3.utils.toWei((0.05).toString(),\"ether\")  \r\n        }).once(\"error\",(err)=>{\r\n           setClaiminnft(false);\r\n           feedback(\"error\");\r\n           console.log(err);\r\n        }).then((receipt)=>{\r\n          setFeedback(\"success\")\r\n          setClaiminnft(false);\r\n        }) \r\n      }\r\n        }\r\n        })\r\n      };\r\n    return(\r\n        \r\n        <section className=\"Intro\">\r\n            <section className=\"MintText\">\r\n                <section className=\"MintTitle\">\r\n                    <text>MINT\r\n                    </text>\r\n                </section>\r\n                <section className=\"MintDescription\">\r\n                    <text>COOL DIGITAL ART\r\n                    </text>\r\n                </section>\r\n                <section className=\"MintTextDescription\">\r\n                    <text>A brand new community of Crypto art that aims<br/> to do great and innovative projects by creating a community<br/> to bring the users closer to quality and unique art.\r\n                    <br/> Join the community for a chance of getting an nft for free.\r\n                    </text>\r\n\r\n                </section>\r\n                <section className=\"MintButton\">\r\n                {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n                \r\n                <s.Container flex={1} ai={\"center\"} jc={\"center\"}>  \r\n                <a   onClick={(e) => {\r\n                }}\r\n                >Connect to Eth</a>\r\n                </s.Container>\r\n            ) : (<s.Container flex={1} ai={\"center\"} jc={\"center\"}>  \r\n                <a   onClick={(e) => {\r\n                  e.preventDefault();\r\n                  claimNft()\r\n                }}\r\n                >Soon!!</a>\r\n            </s.Container>) }\r\n                </section>\r\n            </section>\r\n        </section>\r\n    \r\n    )\r\n\r\n\r\n}\r\nexport default Mint"]},"metadata":{},"sourceType":"module"}