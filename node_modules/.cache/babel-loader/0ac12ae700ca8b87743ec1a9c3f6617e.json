{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls(options = {}) {\n    const {\n      Strings\n    } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return Strings || [];\n  }\n\n  return ls;\n});","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/node_modules/ipfs-http-client/src/pubsub/ls.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","ls","options","Strings","post","signal","searchParams","headers","json"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,EAAf,CAAmBC,OAAO,GAAG,EAA7B,EAAiC;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAM,CAAC,MAAMH,GAAG,CAACI,IAAJ,CAAS,WAAT,EAAsB;AACrDC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADqC;AAErDC,MAAAA,YAAY,EAAET,iBAAiB,CAACK,OAAD,CAFsB;AAGrDK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAHoC,KAAtB,CAAP,EAItBC,IAJsB,EAA1B;AAMA,WAAOL,OAAO,IAAI,EAAlB;AACD;;AACD,SAAOF,EAAP;AACD,CAdyB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { Strings } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return Strings || []\n  }\n  return ls\n})\n"]},"metadata":{},"sourceType":"script"}