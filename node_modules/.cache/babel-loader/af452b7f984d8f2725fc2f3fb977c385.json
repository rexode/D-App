{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../../lib/object-to-camel');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list(options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.map((\n    /** @type {Record<string, any>} */\n    profile) => toCamel(profile));\n  }\n\n  return list;\n});","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/node_modules/ipfs-http-client/src/config/profiles/list.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","list","options","res","post","signal","searchParams","headers","data","json","map","profile"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,IAAf,CAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACjC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,qBAAT,EAAgC;AAChDC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADgC;AAEhDC,MAAAA,YAAY,EAAET,iBAAiB,CAACK,OAAD,CAFiB;AAGhDK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAH+B,KAAhC,CAAlB;AAMA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AAEA,WAAOD,IAAI,CAACE,GAAL,CAAS;AAAC;AAAmCC,IAAAA,OAApC,KAAgDjB,OAAO,CAACiB,OAAD,CAAhE,CAAP;AACD;;AACD,SAAOV,IAAP;AACD,CAhByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../../lib/object-to-camel')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => toCamel(profile))\n  }\n  return list\n})\n"]},"metadata":{},"sourceType":"script"}