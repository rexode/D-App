{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm(name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json(); // @ts-ignore server output is not typed\n\n    return toCamel(data.Keys[0]);\n  }\n\n  return rm;\n});","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/node_modules/ipfs-http-client/src/key/rm.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","rm","name","options","res","post","signal","searchParams","arg","headers","data","json","Keys"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,EAAf,CAAmBC,IAAnB,EAAyBC,OAAO,GAAG,EAAnC,EAAuC;AACrC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;AACnCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADmB;AAEnCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEN,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAFI;AAMnCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANkB,KAAnB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB,CATqC,CAWrC;;AACA,WAAOjB,OAAO,CAACgB,IAAI,CAACE,IAAL,CAAU,CAAV,CAAD,CAAd;AACD;;AACD,SAAOX,EAAP;AACD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-ignore server output is not typed\n    return toCamel(data.Keys[0])\n  }\n  return rm\n})\n"]},"metadata":{},"sourceType":"script"}