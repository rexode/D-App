[{"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\index.js":"1","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\reportWebVitals.js":"2","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\App.js":"3","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\store.js":"4","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\styles\\globalStyles.js":"5","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\data\\dataActions.js":"6","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\data\\dataReducer.js":"7","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\blockchain\\blockchainActions.js":"8","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\blockchain\\blockchainReducer.js":"9","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\header\\index.js":"10","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\header\\header.jsx":"11","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\index.js":"12","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\header\\Header.jsx":"13","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Navbar\\index.js":"14","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Navbar\\Navbar.jsx":"15","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Body\\Body.jsx":"16","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Header\\index.js":"17","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Header\\Header.jsx":"18","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Intro\\Intro.jsx":"19","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\AboutUs\\index.js":"20","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\AboutUs\\AboutUs.jsx":"21","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\OtherInfo\\OtherInfo.jsx":"22","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\OtherInfo\\index.js":"23","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Mint\\index.js":"24","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Mint\\Mint.jsx":"25"},{"size":629,"mtime":1637162493220,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1634397260719,"results":"28","hashOfConfig":"27"},{"size":4483,"mtime":1637343313704,"results":"29","hashOfConfig":"27"},{"size":579,"mtime":1634397260719,"results":"30","hashOfConfig":"27"},{"size":1849,"mtime":1634397260720,"results":"31","hashOfConfig":"27"},{"size":831,"mtime":1634397260718,"results":"32","hashOfConfig":"27"},{"size":672,"mtime":1634397260718,"results":"33","hashOfConfig":"27"},{"size":2263,"mtime":1638985126250,"results":"34","hashOfConfig":"27"},{"size":893,"mtime":1634397260718,"results":"35","hashOfConfig":"27"},{"size":58,"mtime":1637162843480,"results":"36","hashOfConfig":"27"},{"size":489,"mtime":1637165688136,"results":"37","hashOfConfig":"27"},{"size":141,"mtime":1637335901299,"results":"38","hashOfConfig":"27"},{"size":674,"mtime":1637166358030,"results":"39","hashOfConfig":"27"},{"size":58,"mtime":1637163327905,"results":"40","hashOfConfig":"27"},{"size":469,"mtime":1637344450469,"results":"41","hashOfConfig":"27"},{"size":398,"mtime":1638980369411,"results":"42","hashOfConfig":"27"},{"size":58,"mtime":1637162843480,"results":"43","hashOfConfig":"27"},{"size":2130,"mtime":1637510667374,"results":"44","hashOfConfig":"27"},{"size":1288,"mtime":1637594159265,"results":"45","hashOfConfig":"27"},{"size":57,"mtime":1637510966094,"results":"46","hashOfConfig":"27"},{"size":1762,"mtime":1637513553992,"results":"47","hashOfConfig":"27"},{"size":1696,"mtime":1637594536335,"results":"48","hashOfConfig":"27"},{"size":63,"mtime":1637592880556,"results":"49","hashOfConfig":"27"},{"size":46,"mtime":1638979488161,"results":"50","hashOfConfig":"27"},{"size":3712,"mtime":1638983051295,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"132xsn2",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\index.js",[],["112","113"],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\reportWebVitals.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\App.js",["114","115","116","117"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {Header} from \"./layout\"\r\nimport {Body} from \"./layout\"\r\n\r\nimport \"./App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport { create } from \"ipfs-http-client\";\r\nimport background from \"./imagenes/background1.jpg\";\r\n\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claiminnft,setClaiminnft]=useState(false);\r\n  const [feedback,setFeedback]=useState(\"eyyyy\");\r\n  const [balance,setbalance]=useState(\"----\");\r\n  const [cost,setcost]=useState(\"----\");\r\n\r\n\r\n\r\n \r\n  const claimNft =() =>{\r\n    blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n      if (err) {\r\n        console.log(err)\r\n      } else {\r\n        if(blockchain.web3.utils.fromWei(result, \"ether\")>0.05 ){\r\n        setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n        setcost(0.05)\r\n    setClaiminnft(true);\r\n    blockchain.smartContract.methods.mint().send({\r\n      from:blockchain.account,\r\n      value:blockchain.web3.utils.toWei((0.05).toString(),\"ether\")  \r\n    }).once(\"error\",(err)=>{\r\n       setClaiminnft(false);\r\n       feedback(\"error\");\r\n       console.log(err);\r\n    }).then((receipt)=>{\r\n      setFeedback(\"success\")\r\n      setClaiminnft(false);\r\n    }) \r\n  }\r\n    }\r\n    })\r\n  };\r\n  const getBalance =() =>{\r\n    //var accounts =blockchain.web3.eth.getAccounts();\r\n    //var balance = blockchain.web3.eth.getBalance(accounts[0])\r\n    //var account = blockchain.web3.eth.accounts[0];\r\n    blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n      if (err) {\r\n        console.log(err)\r\n      } else {\r\n        setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n        setcost(blockchain.web3.utils.toWei((0.05).toString(),\"ether\"))\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  }, [blockchain.smartContract, dispatch]);\r\n\r\n  return ( \r\n<div style={{ backgroundImage: `url(${background})` }}>\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Body/>\r\n      <s.Screen>\r\n      <header/>\r\n    </s.Screen>\r\n{blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n        <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\r\n          <s.TextTitle>Connect to the Blockchain</s.TextTitle>\r\n          <s.SpacerSmall />\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(connect());\r\n            }}\r\n          >\r\n            CONNECT\r\n          </StyledButton>\r\n          <s.SpacerSmall />\r\n          {blockchain.errorMsg !== \"\" ? (\r\n            <s.TextDescription>{blockchain.errorMsg}</s.TextDescription>\r\n          ) : null}\r\n        </s.Container>\r\n      ) : (\r\n        <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\r\n          <s.TextTitle style={{ textAlign: \"center\" }}>\r\n            {feedback} \r\n          </s.TextTitle>\r\n          <s.TextTitle>{cost}</s.TextTitle>\r\n          <StyledButton  \r\n          disabled={claiminnft ? 1:0 }\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              claimNft();\r\n            }}\r\n          >\r\n            {claiminnft? \"busy\":\"claim\"}   \r\n          </StyledButton>\r\n        </s.Container>\r\n        \r\n        \r\n      )}\r\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n                  <s.TextTitle>hi</s.TextTitle>\r\n\r\n      ) : (\r\n        <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\r\n          <s.TextTitle style={{ textAlign: \"center\" }}>\r\n           mirar balance \r\n          </s.TextTitle>\r\n          <s.TextTitle>{balance}</s.TextTitle>\r\n          <StyledButton  \r\n          disabled={claiminnft ? 1:0 }\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              getBalance()\r\n            }}\r\n          >\r\n            {claiminnft? \"busy\":\"claim\"}   \r\n          </StyledButton>\r\n        </s.Container>\r\n        \r\n        \r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\store.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\styles\\globalStyles.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\data\\dataReducer.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\blockchain\\blockchainActions.js",["118"],"// constants\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/SmartContract.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum);\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await window.ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        //const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId==4) {\r\n          const SmartContractObj = new web3.eth.Contract(\r\n            SmartContract.abi,\r\n            //NetworkData.address\r\n            \"0x57F6c8aad191e2C2079d02E199f0e916BA3308C3\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          window.ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Polygon.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\header\\index.js",[],["119","120"],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\header\\header.jsx",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\index.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\header\\Header.jsx",["121"],"import React from \"react\";\r\nimport { Navbar } from \"..\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../imagenes/logo.png\"\r\nfunction Header () {\r\n\r\n    return (\r\n      <section className=\"header\">\r\n        <section className=\"header-top\">\r\n          <section className=\"header-top__logo\">\r\n            <a href=\"/\" className=\"header-logo\"><img src={logo}></img></a>\r\n          </section>\r\n          <section className=\"header-top__navbar\">\r\n            <section className=\"header-top__navigation\">\r\n              <Navbar />\r\n            </section>\r\n            \r\n          </section>\r\n        </section>\r\n        \r\n      </section>\r\n    )\r\n  }\r\n  \r\n  export default Header;","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Navbar\\index.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Navbar\\Navbar.jsx",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Body\\Body.jsx",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Header\\index.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Header\\Header.jsx",["122","123","124","125","126","127","128","129","130"],"import React,{ useEffect, useState, useRef }  from \"react\";\r\nimport { Navbar } from \"..\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../imagenes/logo.png\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../../redux/data/dataActions\";\r\nimport * as s from \"../../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`;\r\n\r\nfunction Header () {\r\n  const [Login,setLogin]=useState(\"Connect to ETH\");\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n    return (\r\n      <section className=\"header\">\r\n        <section className=\"header-top\">\r\n          <section className=\"header-top__logo\">\r\n            <a href=\"/\" className=\"header-logo\"><img src={logo}></img></a>\r\n          </section>\r\n          <section className=\"header-top__navbar\">\r\n            <section className=\"header-top__navigation\">\r\n              <Navbar />\r\n            </section>\r\n          </section>\r\n          <section className=\"Connect\">\r\n          {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n            <s.Container flex={1} ai={\"center\"} jc={\"center\"}>  \r\n              <a  className=\"connect\" onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(connect());\r\n                }}\r\n                >Connect to Eth</a>\r\n              {blockchain.errorMsg !== \"\" ? (\r\n                <s.TextDescription>{blockchain.errorMsg}</s.TextDescription>\r\n              ) : null}\r\n            </s.Container>\r\n          ) : (<s.Container flex={1} ai={\"center\"} jc={\"center\"}>  \r\n          <a  className=\"connect\" onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(connect());\r\n            }}\r\n            >Connected to Eth</a></s.Container>) }\r\n            \r\n          </section>\r\n          \r\n            \r\n          \r\n        </section>\r\n        \r\n      </section>\r\n    )\r\n  }\r\n  \r\n  export default Header;","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Intro\\Intro.jsx",["131","132"],"import React from \"react\";\r\nimport './Intro.css';\r\nimport background from \"../../imagenes/FondoIntro.png\";\r\nimport image from \"../../imagenes/ImagenIntro.png\";\r\n\r\nfunction Intro(){\r\n\r\n    return(\r\n        <div classname=\"Background\" style={{ backgroundImage: `url(${background})` }}>\r\n        <section className=\"Intro\">\r\n            <section className=\"Text\">\r\n                <section className=\"Title\">\r\n                    <text>BEST NFT EVER\r\n                    </text>\r\n                </section>\r\n                <section className=\"Description\">\r\n                    <text>COOL DIGITAL ART\r\n                    </text>\r\n                </section>\r\n                <section className=\"textDescription\">\r\n                    <text>A brand new community of Crypto art that aims<br/> to do great and innovative projects by creating a community<br/> to bring the users closer to quality and unique art.\r\n                    <br/> Join the community for a chance of getting an nft for free.\r\n                    </text>\r\n                </section>\r\n            </section>\r\n            <section className=\"Image\">\r\n            <a className=\"Image\"><img src={image}></img></a>\r\n            \r\n            </section>\r\n        </section>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Intro;","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\AboutUs\\index.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\AboutUs\\AboutUs.jsx",["133","134"],"import React from \"react\";\r\nimport AboutUsImage from \"../../imagenes/AboutUs.png\";\r\nimport './AboutUs.css';\r\n\r\nfunction AboutUs(){\r\n    return(\r\n        <section className=\"AboutUs\">\r\n            <section className=\"AboutImage\">\r\n                    <a ><img src={AboutUsImage}></img></a>\r\n            </section>\r\n            <section className=\"AboutText\">\r\n                <section className=\"AboutTitle\">\r\n                    <text>ABOUT US\r\n                    </text>\r\n                </section>\r\n                <section className=\"AboutTextDescription\">\r\n                    <text>We are a group of art enthusiasts who,after seeing the great potential of the nft world,want to bring an innovative idea: The creation of a transparent and active community where art lovers will have access to the following advantages.\r\n                    <ol><br/>\r\n                    <li>1ºUsers will have access to a private community where they will be able to chat, share and help other users projects.</li>\r\n                    <li>2ºFurthermore , users can access to presales of own collections and collaborations with other projects, in advance and exclusively.</li>\r\n                    <li>3º Artists who want to create NFT collections will be given support and help to facilitate the process. </li>\r\n                    <li>4ºThe users who have the largest number of our NFT (except the initial collection) will have access to more advantages.</li>\r\n                    <li>5ºThe server will have a DAO, so that users can participate in the future of the society.</li>\r\n                    </ol>\r\n                    </text>\r\n                </section>\r\n            </section>\r\n                    \r\n        </section>\r\n\r\n    )\r\n}\r\nexport default AboutUs\r\n","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\OtherInfo\\OtherInfo.jsx",["135","136"],"import React from \"react\";\r\nimport OtherInfoImage from '../../imagenes/OtherInfo.png'\r\nimport './OtherInfo.css'\r\n\r\n function OtherInfo(){\r\n    return (\r\n    \r\n        <section className=\"OtherInfo\">\r\n            \r\n            <section className=\"OtherInfoText\">\r\n                <section className=\"OtherInfoTitle\">\r\n                    <text>OTHER INFO\r\n                    </text>\r\n                </section>\r\n                <section className=\"OtherInfoList\">\r\n                    <text>To join the society, you will need to have an NFT/entry pass  to the society, there are several ways to get one.\r\n                        <ol>\r\n                            <li>1ºBy Buy it in the initial offer on our website.</li>\r\n                            <li>2ºIn case of a large number of buyers, part of the collection of developers will be auctioned.</li>\r\n                            <li>3ºBy Buy it in the secondary market of open sea.</li>\r\n                            <li>4ºBy winning giveaways and future contests.</li>\r\n                        </ol> <br/>\r\n                            Number of NFTs minted initially.<br/>\r\n                            Total:1100.<br/>\r\n                            Initial Mint:1000.<br/>\r\n                            The remaining 100 will be reserved by the developers for sale at auction, giveaways prizes or personal use (hiring or collaborations).\r\n                    </text>\r\n                </section>\r\n            </section>\r\n            <section className=\"OtherInfoImage\">\r\n            <a className=\"Image\"><img src={OtherInfoImage}></img></a>\r\n            \r\n            </section>\r\n        </section>\r\n    )\r\n\r\n\r\n }\r\n export default OtherInfo;","C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\OtherInfo\\index.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Mint\\index.js",[],"C:\\Users\\santi\\Desktop\\frontend_base_dapp\\src\\layout\\Mint\\Mint.jsx",["137","138","139","140","141","142","143","144","145","146","147","148"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Mint.css\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../../redux/data/dataActions\";\r\nimport * as s from \"../../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`;\r\nfunction Mint(){\r\n    const [cost,setcost]=useState(\"----\");\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [claiminnft,setClaiminnft]=useState(false);\r\n    const [feedback,setFeedback]=useState(\"eyyyy\");\r\n    const [balance,setbalance]=useState(\"----\");\r\n\r\n    const getBalance =() =>{\r\n        //var accounts =blockchain.web3.eth.getAccounts();\r\n        //var balance = blockchain.web3.eth.getBalance(accounts[0])\r\n        //var account = blockchain.web3.eth.accounts[0];\r\n        blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n          if (err) {\r\n            console.log(err)\r\n          } else {\r\n            setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n            setcost(blockchain.web3.utils.toWei((0.05).toString(),\"ether\"))\r\n          }\r\n        })\r\n      }\r\n      const claimNft =() =>{\r\n        blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n          if (err) {\r\n            console.log(err)\r\n          } else {\r\n            if(blockchain.web3.utils.fromWei(result, \"ether\")>0.05 ){\r\n            setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n            setcost(0.05)\r\n        setClaiminnft(true);\r\n        blockchain.smartContract.methods.mint().send({\r\n          from:blockchain.account,\r\n          value:blockchain.web3.utils.toWei((0.05).toString(),\"ether\")  \r\n        }).once(\"error\",(err)=>{\r\n           setClaiminnft(false);\r\n           feedback(\"error\");\r\n           console.log(err);\r\n        }).then((receipt)=>{\r\n          setFeedback(\"success\")\r\n          setClaiminnft(false);\r\n        }) \r\n      }\r\n        }\r\n        })\r\n      };\r\n    return(\r\n        \r\n        <section className=\"Intro\">\r\n            <section className=\"MintText\">\r\n                <section className=\"MintTitle\">\r\n                    <text>MINT\r\n                    </text>\r\n                </section>\r\n                <section className=\"MintDescription\">\r\n                    <text>COOL DIGITAL ART\r\n                    </text>\r\n                </section>\r\n                <section className=\"MintTextDescription\">\r\n                    <text>A brand new community of Crypto art that aims<br/> to do great and innovative projects by creating a community<br/> to bring the users closer to quality and unique art.\r\n                    <br/> Join the community for a chance of getting an nft for free.\r\n                    </text>\r\n\r\n                </section>\r\n                <section className=\"MintButton\">\r\n                {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n                \r\n                <s.Container flex={1} ai={\"center\"} jc={\"center\"}>  \r\n                <a   onClick={(e) => {\r\n                }}\r\n                >Connect to Eth</a>\r\n                </s.Container>\r\n            ) : (<s.Container flex={1} ai={\"center\"} jc={\"center\"}>  \r\n                <a   onClick={(e) => {\r\n                  e.preventDefault();\r\n                  claimNft()\r\n                }}\r\n                >Soon!!</a>\r\n            </s.Container>) }\r\n                </section>\r\n            </section>\r\n        </section>\r\n    \r\n    )\r\n\r\n\r\n}\r\nexport default Mint",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":38,"nodeType":"155","messageId":"156","endLine":1,"endColumn":44},{"ruleId":"153","severity":1,"message":"157","line":11,"column":10,"nodeType":"155","messageId":"156","endLine":11,"endColumn":16},{"ruleId":"153","severity":1,"message":"158","line":22,"column":9,"nodeType":"155","messageId":"156","endLine":22,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":73,"column":6,"nodeType":"161","endLine":73,"endColumn":42,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":47,"column":22,"nodeType":"165","messageId":"166","endLine":47,"endColumn":24},{"ruleId":"149","replacedBy":"167"},{"ruleId":"151","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":11,"column":49,"nodeType":"171","endLine":11,"endColumn":65},{"ruleId":"153","severity":1,"message":"172","line":1,"column":16,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":1,"column":37,"nodeType":"155","messageId":"156","endLine":1,"endColumn":43},{"ruleId":"153","severity":1,"message":"173","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":19},{"ruleId":"153","severity":1,"message":"174","line":15,"column":10,"nodeType":"155","messageId":"156","endLine":15,"endColumn":15},{"ruleId":"153","severity":1,"message":"175","line":15,"column":16,"nodeType":"155","messageId":"156","endLine":15,"endColumn":24},{"ruleId":"153","severity":1,"message":"158","line":18,"column":9,"nodeType":"155","messageId":"156","endLine":18,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":23,"column":49,"nodeType":"171","endLine":23,"endColumn":65},{"ruleId":"176","severity":1,"message":"177","line":33,"column":15,"nodeType":"171","endLine":37,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":43,"column":11,"nodeType":"171","endLine":47,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":27,"column":13,"nodeType":"171","endLine":27,"endColumn":34},{"ruleId":"169","severity":1,"message":"170","line":27,"column":34,"nodeType":"171","endLine":27,"endColumn":51},{"ruleId":"176","severity":1,"message":"177","line":9,"column":21,"nodeType":"171","endLine":9,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":9,"column":25,"nodeType":"171","endLine":9,"endColumn":49},{"ruleId":"176","severity":1,"message":"177","line":31,"column":13,"nodeType":"171","endLine":31,"endColumn":34},{"ruleId":"169","severity":1,"message":"170","line":31,"column":34,"nodeType":"171","endLine":31,"endColumn":60},{"ruleId":"153","severity":1,"message":"172","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":1,"column":38,"nodeType":"155","messageId":"156","endLine":1,"endColumn":44},{"ruleId":"153","severity":1,"message":"178","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":17},{"ruleId":"153","severity":1,"message":"173","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":19},{"ruleId":"153","severity":1,"message":"179","line":12,"column":12,"nodeType":"155","messageId":"156","endLine":12,"endColumn":16},{"ruleId":"153","severity":1,"message":"180","line":13,"column":11,"nodeType":"155","messageId":"156","endLine":13,"endColumn":19},{"ruleId":"153","severity":1,"message":"158","line":15,"column":11,"nodeType":"155","messageId":"156","endLine":15,"endColumn":15},{"ruleId":"153","severity":1,"message":"181","line":16,"column":12,"nodeType":"155","messageId":"156","endLine":16,"endColumn":22},{"ruleId":"153","severity":1,"message":"182","line":18,"column":12,"nodeType":"155","messageId":"156","endLine":18,"endColumn":19},{"ruleId":"153","severity":1,"message":"183","line":20,"column":11,"nodeType":"155","messageId":"156","endLine":20,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":79,"column":17,"nodeType":"171","endLine":81,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":84,"column":17,"nodeType":"171","endLine":88,"endColumn":18},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'create' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blockchain.account'. Either include it or remove the dependency array.","ArrayExpression",["186"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["184"],["185"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'fetchData' is defined but never used.","'Login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'connect' is defined but never used.","'cost' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'claiminnft' is assigned a value but never used.","'balance' is assigned a value but never used.","'getBalance' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},"Update the dependencies array to be: [blockchain.account, blockchain.smartContract, dispatch]",{"range":"189","text":"190"},[2353,2389],"[blockchain.account, blockchain.smartContract, dispatch]"]