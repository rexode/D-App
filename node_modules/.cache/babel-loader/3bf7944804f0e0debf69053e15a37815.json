{"ast":null,"code":"'use strict';\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat(cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const output = await res.json();\n    return { ...output,\n      Hash: CID.parse(output.Hash)\n    };\n  }\n\n  return stat;\n});","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/node_modules/ipfs-http-client/src/object/stat.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","stat","cid","options","res","post","signal","searchParams","arg","headers","output","json","Hash","parse"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,IAAf,CAAqBC,GAArB,EAA0BC,OAAO,GAAG,EAApC,EAAwC;AACtC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAG,GAAEN,GAAI,EADkB;AAE9B,WAAGC;AAF2B,OAAD,CAFS;AAMxCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANuB,KAAxB,CAAlB;AASA,UAAMC,MAAM,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAArB;AAEA,WAAO,EACL,GAAGD,MADE;AAELE,MAAAA,IAAI,EAAElB,GAAG,CAACmB,KAAJ,CAAUH,MAAM,CAACE,IAAjB;AAFD,KAAP;AAID;;AACD,SAAOX,IAAP;AACD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const output = await res.json()\n\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    }\n  }\n  return stat\n})\n"]},"metadata":{},"sourceType":"script"}