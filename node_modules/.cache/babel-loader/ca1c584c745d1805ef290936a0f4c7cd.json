{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\frontend_base_dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { create } from \"ipfs-http-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StyledButton = styled.button`\n  padding: 8px;\n`;\n_c = StyledButton;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.smartContract, dispatch]);\n  return /*#__PURE__*/_jsxDEV(s.Screen, {\n    children: blockchain.account === \"\" || blockchain.smartContract === null ? /*#__PURE__*/_jsxDEV(s.Container, {\n      flex: 1,\n      ai: \"center\",\n      jc: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n        children: \"Connect to the Blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: e => {\n          e.preventDefault();\n          dispatch(connect());\n        },\n        children: \"CONNECT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), blockchain.errorMsg !== \"\" ? /*#__PURE__*/_jsxDEV(s.TextDescription, {\n        children: blockchain.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(s.Container, {\n      flex: 1,\n      ai: \"center\",\n      style: {\n        padding: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"Name: \", data.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: e => {\n          e.preventDefault();\n          dispatch(connect());\n        },\n        children: \"CONNECT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"83P95pPiMV6KJNec4AGGGzUg8y0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/src/App.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","connect","fetchData","s","styled","create","StyledButton","button","App","dispatch","blockchain","state","data","account","smartContract","e","preventDefault","errorMsg","padding","textAlign","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport { create } from \"ipfs-http-client\";\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  }, [blockchain.smartContract, dispatch]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n        <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\r\n          <s.TextTitle>Connect to the Blockchain</s.TextTitle>\r\n          <s.SpacerSmall />\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(connect());\r\n            }}\r\n          >\r\n            CONNECT\r\n          </StyledButton>\r\n          <s.SpacerSmall />\r\n          {blockchain.errorMsg !== \"\" ? (\r\n            <s.TextDescription>{blockchain.errorMsg}</s.TextDescription>\r\n          ) : null}\r\n        </s.Container>\r\n      ) : (\r\n        <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\r\n          <s.TextTitle style={{ textAlign: \"center\" }}>\r\n            Name: {data.name}.\r\n          </s.TextTitle>\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(connect());\r\n            }}\r\n          >\r\n            CONNECT\r\n          </StyledButton>\r\n        </s.Container>\r\n      )}\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}