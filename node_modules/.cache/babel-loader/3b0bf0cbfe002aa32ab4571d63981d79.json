{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\frontend_base_dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { header } from \"./layout/header\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { create } from \"ipfs-http-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StyledButton = styled.button`\n  padding: 8px;\n`;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claiminnft, setClaiminnft] = useState(false);\n  const [feedback, setFeedback] = useState(\"eyyyy\");\n  const [balance, setbalance] = useState(\"----\");\n  const [cost, setcost] = useState(\"----\");\n\n  const claimNft = () => {\n    blockchain.web3.eth.getBalance(blockchain.account, function (err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        if (blockchain.web3.utils.fromWei(result, \"ether\") > 0.05) {\n          setbalance(blockchain.web3.utils.fromWei(result, \"ether\"));\n          setcost(0.05);\n          setClaiminnft(true);\n          blockchain.smartContract.methods.mint().send({\n            from: blockchain.account,\n            value: blockchain.web3.utils.toWei(0.05.toString(), \"ether\")\n          }).once(\"error\", err => {\n            setClaiminnft(false);\n            feedback(\"error\");\n            console.log(err);\n          }).then(receipt => {\n            setFeedback(\"success\");\n            setClaiminnft(false);\n          });\n        }\n      }\n    });\n  };\n\n  const getBalance = () => {\n    //var accounts =blockchain.web3.eth.getAccounts();\n    //var balance = blockchain.web3.eth.getBalance(accounts[0])\n    //var account = blockchain.web3.eth.accounts[0];\n    blockchain.web3.eth.getBalance(blockchain.account, function (err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        setbalance(blockchain.web3.utils.fromWei(result, \"ether\"));\n        setcost(blockchain.web3.utils.toWei(0.05.toString(), \"ether\"));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.smartContract, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Bew6sVMQsCVVaHWh+CHN4Yz3Bts=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/santi/Desktop/frontend_base_dapp/src/App.js"],"names":["React","useEffect","useState","useRef","header","useDispatch","useSelector","connect","fetchData","s","styled","create","StyledButton","button","App","dispatch","blockchain","state","data","claiminnft","setClaiminnft","feedback","setFeedback","balance","setbalance","cost","setcost","claimNft","web3","eth","getBalance","account","err","result","console","log","utils","fromWei","smartContract","methods","mint","send","from","value","toWei","toString","once","then","receipt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport {header} from \"./layout/header\"\r\nimport \"./App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport { create } from \"ipfs-http-client\";\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claiminnft,setClaiminnft]=useState(false);\r\n  const [feedback,setFeedback]=useState(\"eyyyy\");\r\n  const [balance,setbalance]=useState(\"----\");\r\n  const [cost,setcost]=useState(\"----\");\r\n\r\n\r\n\r\n \r\n  const claimNft =() =>{\r\n    blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n      if (err) {\r\n        console.log(err)\r\n      } else {\r\n        if(blockchain.web3.utils.fromWei(result, \"ether\")>0.05 ){\r\n        setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n        setcost(0.05)\r\n    setClaiminnft(true);\r\n    blockchain.smartContract.methods.mint().send({\r\n      from:blockchain.account,\r\n      value:blockchain.web3.utils.toWei((0.05).toString(),\"ether\")  \r\n    }).once(\"error\",(err)=>{\r\n       setClaiminnft(false);\r\n       feedback(\"error\");\r\n       console.log(err);\r\n    }).then((receipt)=>{\r\n      setFeedback(\"success\")\r\n      setClaiminnft(false);\r\n    }) \r\n  }\r\n    }\r\n    })\r\n  };\r\n  const getBalance =() =>{\r\n    //var accounts =blockchain.web3.eth.getAccounts();\r\n    //var balance = blockchain.web3.eth.getBalance(accounts[0])\r\n    //var account = blockchain.web3.eth.accounts[0];\r\n    blockchain.web3.eth.getBalance(blockchain.account, function(err, result) {\r\n      if (err) {\r\n        console.log(err)\r\n      } else {\r\n        setbalance(blockchain.web3.utils.fromWei(result, \"ether\"))\r\n        setcost(blockchain.web3.utils.toWei((0.05).toString(),\"ether\"))\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  }, [blockchain.smartContract, dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}